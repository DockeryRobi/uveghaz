//Részleges kódok
VENTILLÁTOR

Arduino
// Define the pin for the fan
int fanPin = 9;

void setup() {
  // Initialize the fan pin as an output
  pinMode(fanPin, OUTPUT);
  // Start serial communication
  Serial.begin(9600);
}

void loop() {
  // Check if there is any incoming data
  if(Serial.available() > 0) {
    // Read the incoming data
    char command = Serial.read();
    
    // Check the received command
    if(command == '1') {
      // Turn on the fan
      digitalWrite(fanPin, HIGH);
      Serial.println("Fan turned on");
    } else if(command == '0') {
      // Turn off the fan
      digitalWrite(fanPin, LOW);
      Serial.println("Fan turned off");
    }
  }
}

cmd:
composer require php-serial/php-serial

controller:
// app/Http/Controllers/FanController.php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use PHPSerial\Serial;
use SerialException;

class FanController extends Controller
{
    public function turnOn()
    {
        $serial = new Serial();
        $port = '/dev/ttyACM0'; // Set the correct port for your Arduino
        $serial->deviceSet($port);
        $serial->confBaudRate(9600);
        $serial->confParity("none");
        $serial->confCharacterLength(8);
        $serial->confStopBits(1);

        $serial->deviceOpen();
        $serial->sendMessage("1");

        return redirect()->back();
    }

    public function turnOff()
    {
        $serial = new Serial();
        $port = '/dev/ttyACM0'; // Set the correct port for your Arduino
        $serial->deviceSet($port);
        $serial->confBaudRate(9600);
        $serial->confParity("none");
        $serial->confCharacterLength(8);
        $serial->confStopBits(1);

        $serial->deviceOpen();
        $serial->sendMessage("0");

        return redirect()->back();
    }
}

routeok:
// routes/web.php

use App\Http\Controllers\FanController;

Route::get('/turn-on', [FanController::class, 'turnOn']);
Route::get('/turn-off', [FanController::class, 'turnOff']);

<!-- resources/views/welcome.blade.php -->

<!DOCTYPE html>
<html>
<head>
    <title>Arduino Fan Control</title>
</head>
<body>
    <form action="/turn-on" method="GET">
        <button type="submit">Turn On Fan</button>
    </form>
    
    <form action="/turn-off" method="GET">
        <button type="submit">Turn Off Fan</button>
    </form>
</body>
</html>

VÍZPUMPA(MOTOR)

Arduino:
int pumpPin = 13;

void setup() {
  pinMode(pumpPin, OUTPUT);
  Serial.begin(9600);
}

void loop() {
  if (Serial.available() > 0) {
    char command = Serial.read();
    if (command == '1') {
      digitalWrite(pumpPin, HIGH);
    } else if (command == '0') {
      digitalWrite(pumpPin, LOW);
    }
  }
}

/*
void probafan(){
  // Check if there is any incoming data
  if(Serial.available() > 0) {
    // Read the incoming data
    char command = Serial.read();
    
    // Check the received command
    if(command == '1') {
      // Turn on the fan
      digitalWrite(fanPin, HIGH);
      Serial.println("Fan turned on");
    } else if(command == '0') {
      // Turn off the fan
      digitalWrite(fanPin, LOW);
      Serial.println("Fan turned off");
    }
  }
}*/

blade:
<form method="post" action="{{ route('control.pump') }}">
    @csrf
    <button type="submit" name="command" value="1">Turn On Water Pump</button>
    <button type="submit" name="command" value="0">Turn Off Water Pump</button>
</form>

Route:
Route::post('/control-pump', function (Request $request) {
    $command = $request->input('command');
    $port = '/dev/ttyACM0'; // Change this to the appropriate port for your Arduino board
    
    $fp = fopen($port, 'w');
    fwrite($fp, $command);
    fclose($fp);
    
    return redirect()->back();
})->name('control.pump');

relé shield:
(https://forum.arduino.cc/t/how-do-i-connect-12dc-minifan-with-relay/1139886)
common on the relay goes to the fan positive
no or nc on the relay goes to the power supply positive
negative on the power supply goes to the fan negative

N-MOSFET:
To connect a 12V power supply with a fan and a Wemos D1 R1 using an N-MOSFET, you will need the following components:
1. N-MOSFET (e.g. IRFZ44N)
2. 12V power supply
3. Fan
4. Wemos D1 R1
5. Breadboard and jumper wires

Here is the circuit diagram:

                      +12V
                        |
                        |
                        | 
                        +---------> Fan (12V)
                        | 
                        | 
                     N-MOSFET
                        |       
                        ┣━━━━━━━━━━━━━━━━━━━> Wemos D1 R1 (GPIO Pin)
                        |
                        |
                       GND

Here is the code for controlling the fan using the Wemos D1 R1:

#define FAN_PIN D1 // GPIO Pin connected to N-MOSFET

void setup() {
  pinMode(FAN_PIN, OUTPUT); // Set GPIO Pin connected to N-MOSFET as OUTPUT
}

void loop() {
  // Turn the fan ON for 5 seconds
  digitalWrite(FAN_PIN, HIGH);
  delay(5000);
  
  // Turn the fan OFF for 5 seconds
  digitalWrite(FAN_PIN, LOW);
  delay(5000);
}

Make sure to replace `D1` with the actual GPIO Pin you used to connect the N-MOSFET in the code. Upload the code to the Wemos D1 R1 using the Arduino IDE or any other suitable software. Once uploaded, the code will turn the fan ON for 5 seconds and then turn it OFF for 5 seconds in a loop.

video - MOSFET: https://www.youtube.com/watch?v=Pw1kSS_FIKk

/*
  //micro lehet pontosabb
  if (millis() >= (previousTime)  ) {
    previousTime = previousTime + 1000;  // + időzóna szerint
    seconds++;
    if (seconds == 60)
    {
    seconds = 0;
    minutes++;
    }
    if (minutes == 60)
    {
    minutes = 0;
    hours++;
    }
    if (hours == 24)
    {
    hours = 0;
    }
  */